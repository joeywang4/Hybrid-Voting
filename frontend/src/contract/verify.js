import Web3 from 'web3'
let web3 = new Web3(window.ethereum);

web3.eth.net.getNetworkType()
.then(name => {
  if(name !== "ropsten") console.error("Please switch to ropsten testnet!");
});

const addr = "0xBf9204329CF66ABfF23984fC21CA5710E08D397e";
const abi = [
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"name": "DiscreteLogAccept",
		"type": "event"
	},
	{
		"constant": false,
		"inputs": [
			{
				"internalType": "bytes",
				"name": "_y",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_g",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_p",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_m",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_s",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_e",
				"type": "bytes"
			}
		],
		"name": "DiscreteLogVerify",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"name": "DoubleDiscreteLogAccept",
		"type": "event"
	},
	{
		"constant": false,
		"inputs": [
			{
				"internalType": "bytes",
				"name": "_y",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_g1",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_g2",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_p",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_m",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_s1",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_s2",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_e",
				"type": "bytes"
			}
		],
		"name": "DoubleDiscreteLogVerify",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"internalType": "bytes",
				"name": "b",
				"type": "bytes"
			},
			{
				"internalType": "uint256",
				"name": "offset",
				"type": "uint256"
			}
		],
		"name": "bytesToBytes32",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "",
				"type": "bytes32"
			}
		],
		"payable": false,
		"stateMutability": "pure",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"internalType": "bytes",
				"name": "a",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "b",
				"type": "bytes"
			}
		],
		"name": "MergeBytes",
		"outputs": [
			{
				"internalType": "bytes",
				"name": "c",
				"type": "bytes"
			}
		],
		"payable": false,
		"stateMutability": "pure",
		"type": "function"
	}
]

const discreteLog = async ( _y,  _g,  _p,  _m,  _s, _e) => {
  await window.ethereum.enable();
  const accounts = await web3.eth.getAccounts();
  if(!Array.isArray(accounts) || accounts.length < 1) throw new Error("Get account error!");
  const Account = accounts[0];
  const Contract = new web3.eth.Contract(abi, addr);
  return Contract.methods.DiscreteLogVerify(_y,  _g,  _p,  _m,  _s, _e).send({from: Account})
  .on('transactionHash', hash => {
    console.log("[transactionHash]", hash);
  })
  .on('confirmation', (confirmationNumber, receipt) => {
    console.log("[confirmation]", confirmationNumber, receipt);
  })
  .on('receipt', receipt => {
    console.log("[receipt]", receipt);
  })
  .on('error', (error, receipt) => {
    console.log("[error]", error, receipt);
  });
}

const doubleDiscreteLog = async ( _y,  _g1, _g2,  _p,  _m,  _s1, _s2, _e) => {
  await window.ethereum.enable();
  const accounts = await web3.eth.getAccounts();
  if(!Array.isArray(accounts) || accounts.length < 1) throw new Error("Get account error!");
  const Account = accounts[0];
  const Contract = new web3.eth.Contract(abi, addr);
  return Contract.methods.DoubleDiscreteLogVerify(_y,  _g1, _g2,  _p,  _m,  _s1, _s2, _e).send({from: Account})
  .on('transactionHash', hash => {
    console.log("[transactionHash]", hash);
  })
  .on('confirmation', (confirmationNumber, receipt) => {
    console.log("[confirmation]", confirmationNumber, receipt);
  })
  .on('receipt', receipt => {
    console.log("[receipt]", receipt);
  })
  .on('error', (error, receipt) => {
    console.log("[error]", error, receipt);
  });
}

/*
const y = ["0xc","0x95","0x63","0x4","0xb0","0x4d","0x3e","0x47","0xba","0xb0","0x45","0x11","0x22","0x41","0xc1","0x30","0x3e","0xca","0xa6","0xcd","0xa7","0xd0","0xdb","0xe3","0x28","0x96","0x17","0x6f","0xaa","0x70","0x17","0xa3","0x79","0x8","0x7c","0xa4","0x58","0x6f","0x50","0xcf","0x10","0x62","0x2c","0xba","0xbf","0x4c","0xd8","0x84","0xfc","0x14","0x62","0x39","0x91","0x19","0x8b","0xc3","0xe0","0xb7","0x12","0x55","0xba","0xf3","0x4f","0xbe","0x76","0xfa","0x74","0x5f","0x43","0x73","0x26","0x2c","0xed","0xd1","0xfd","0xbc","0xd","0xb5","0xcf","0xe7","0x16","0xf1","0xc9","0xb4","0xd","0x26","0xd6","0xa8","0xa0","0xa9","0x85","0xd2","0x1f","0xa5","0x38","0x96","0xd5","0x72","0x5d","0x7a","0xca","0x14","0xc8","0x79","0xe3","0x9e","0x70","0x6c","0x13","0x34","0x41","0x89","0xc6","0xc","0x2a","0xd2","0xbf","0xb7","0x81","0xba","0xc2","0xd4","0x15","0x1c","0xc2","0x7","0x58","0xaf"];
const g = ["0xb3","0x52","0xfc","0x1c","0x88","0x6a","0xee","0x58","0xa0","0xde","0x6f","0x6d","0x6e","0x4b","0xea","0xa8","0x5e","0x73","0x43","0xcf","0xd7","0x2b","0x37","0x23","0xd","0x31","0xac","0x19","0x4b","0xef","0xb0","0x40","0x28","0xf4","0xbd","0xb6","0xd8","0x49","0xff","0xc7","0xae","0xe6","0xbb","0x1","0x4d","0x1f","0x70","0xd5","0xbc","0x8a","0x13","0x74","0xf4","0x4e","0xb9","0x42","0xe","0x94","0x6d","0x31","0xad","0xe8","0xfc","0x38","0x85","0x61","0x98","0x4f","0x42","0xea","0xaf","0x78","0x1e","0xff","0xa9","0x45","0x93","0x1d","0xff","0x28","0x91","0x7a","0xa2","0xbf","0x67","0x27","0xc6","0x98","0x4","0x13","0x12","0x65","0xc6","0x4d","0xbb","0x86","0x71","0xdf","0xcb","0xd7","0xa9","0x4","0xe","0xc6","0x8a","0x4","0x4b","0xca","0xa5","0xa1","0x20","0x1f","0xad","0x51","0xf5","0xa6","0x38","0x8b","0xca","0xc3","0xe","0x92","0xd1","0x8","0xe0","0x3b","0xaa","0xb4"];
const p = ["0xd6","0xff","0xa7","0x5","0xfd","0xc3","0xe4","0x9c","0x49","0xf3","0xa7","0xa","0x70","0xea","0xe0","0x6b","0x85","0x81","0x93","0x23","0x33","0xed","0xf8","0xe3","0xa3","0x59","0x31","0x7a","0xe8","0xe8","0xb2","0x14","0x11","0x46","0x22","0x58","0x31","0x5c","0x8f","0x60","0x3a","0x29","0x57","0xcb","0x78","0x23","0xb1","0x88","0x65","0xf0","0x35","0xde","0xbd","0x39","0x18","0x5b","0xe2","0xd8","0x12","0x7b","0xde","0x1d","0x2a","0xc2","0xb1","0xe8","0x4e","0xac","0x8d","0x2b","0xf7","0x55","0xbd","0x59","0x30","0xc2","0x8f","0xa0","0x47","0x74","0x43","0x6b","0xbe","0xf8","0xdd","0x8c","0xd","0xe6","0x9a","0xb4","0x98","0xc","0x2d","0x42","0x9b","0x46","0x41","0xdc","0xe8","0xed","0x7e","0x78","0x88","0x31","0x18","0x8f","0x25","0xf6","0x2d","0xe","0x87","0x2e","0xd8","0x76","0x60","0x59","0x90","0x8e","0x67","0x2b","0x83","0x52","0x48","0x74","0x66","0xff","0xe","0x43"];
const m = ["0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x1","0xe2","0x40"];
const s = ["0x6d","0xf","0xfe","0x60","0xe8","0x65","0xfb","0xe0","0xcb","0xa6","0x24","0x64","0x85","0x3f","0x25","0x4f","0x94","0xcf","0x24","0x3c","0x13","0xc7","0xf0","0xf3","0xd3","0x3d","0xbe","0x1b","0x1b","0x4c","0xd","0x6d","0xad","0xc7","0xf1","0xc0","0x50","0x41","0x59","0x61","0x72","0x5","0xa1","0x6a","0x9f","0x89","0xa5","0x23","0xb9","0x39","0x7c","0x94","0xbe","0x83","0x8b","0x82","0x34","0x52","0xc","0x61","0x24","0x80","0x21","0x3c","0x60","0x5a","0x4a","0x62","0x96","0x8c","0x93","0x37","0x54","0x16","0x9e","0x11","0x9f","0x4c","0xcc","0xd3","0x33","0x8f","0xb3","0xc8","0xe3","0x76","0xa","0x93","0xf2","0x5d","0xb5","0xd5","0x15","0x77","0xc6","0xc8","0xf6","0xff","0x5e","0x62","0xbe","0xcd","0x9c","0x3d","0xa2","0x76","0xf9","0x4e","0x24","0x56","0x56","0x2f","0x9d","0x85","0xb6","0x89","0xf","0x98","0x1b","0x2b","0xde","0xf","0x49","0x3c","0x45","0x5a","0x39","0x86"];
const e = ["0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x5a","0xfe","0x35","0x1","0x6c","0x1d","0x64","0xbd","0xb8","0xb6","0x9f","0xe1","0x66","0xcb","0x9d","0x80","0x91","0x68","0x2b","0x12","0x11","0x6b","0x19","0xf2","0x35","0x38","0x48","0xff","0x4c","0x34","0x33","0xd"];
discreteLog(y, g, p, m, s, e);
*/
const y = ["0x5d","0xab","0x85","0xd8","0x5b","0x42","0x5b","0xdc","0x47","0xb7","0xcc","0x11","0x91","0x56","0x33","0xd7","0x67","0x24","0x50","0xe2","0x8c","0x10","0xb8","0x2c","0xde","0xe4","0xef","0x9a","0x4a","0x4f","0xdd","0x4","0x1","0xbd","0x5a","0x99","0x37","0x15","0x14","0xcf","0x5f","0xcb","0x86","0x57","0x7d","0xc5","0x1e","0x8e","0x14","0xa7","0x9c","0xc5","0xf3","0x59","0xd5","0xe8","0xab","0x59","0xd3","0x96","0x77","0x89","0x7a","0x6b","0x5b","0x37","0x84","0x8b","0xfa","0xb0","0x8a","0x13","0xc1","0x23","0x1","0x1e","0x5e","0x40","0xd9","0x4b","0x79","0x55","0x26","0xdd","0x2b","0xd4","0xb7","0xec","0x61","0x18","0x28","0x9d","0x25","0x1b","0x50","0xdb","0x58","0xfc","0x71","0x94","0xa0","0xca","0xba","0x63","0xb6","0xdf","0x3d","0xd6","0x2","0x92","0x84","0x79","0x2e","0xcd","0x8c","0xa4","0xdd","0xcf","0x2a","0xd8","0x88","0x2c","0xe4","0x7a","0x91","0x34","0x3a","0x68"];
const g1 = ["0x8","0x87","0xdc","0xf5","0xfb","0xd2","0x55","0xe1","0x59","0xb6","0xd5","0xab","0xfe","0xda","0xe2","0xb7","0x0","0xfa","0x4f","0xd4","0x9","0x5b","0x11","0x5","0xcc","0x8","0x34","0xb5","0x8c","0x7e","0x6d","0x4","0x6e","0x66","0xf8","0xf4","0xbd","0x31","0xe0","0x54","0xb2","0xf5","0x6","0x16","0x91","0x7f","0xb2","0xcf","0x8e","0xb0","0x15","0x2b","0xd3","0xec","0xdf","0xdd","0x83","0x9e","0x8d","0x94","0x79","0xe3","0x7f","0xea","0x61","0x7","0x32","0x62","0xed","0x99","0x61","0x95","0x12","0x30","0xc2","0x25","0xf4","0x9a","0x1d","0x2","0x18","0xf7","0x62","0x87","0x2","0x48","0x8c","0xd9","0xf","0x4","0x6f","0x71","0x6d","0xb8","0x9a","0xe5","0xf7","0x2b","0x8e","0x56","0x65","0xa","0xde","0x8b","0xcb","0xfa","0x9a","0xc9","0x6a","0xdb","0x66","0xb7","0xa6","0xab","0x11","0x2b","0xab","0x70","0xe7","0xf9","0x10","0x39","0x68","0x5c","0x7c","0x5","0x4b","0xe2"];
const g2 = ["0x8c","0xab","0x9d","0xdc","0xb1","0xb8","0x82","0x98","0x84","0x10","0xf3","0x5e","0x15","0x21","0x5e","0xe4","0xc9","0xf0","0x45","0xd8","0x6b","0xdf","0x7f","0xee","0xe8","0x3e","0x3b","0x19","0x42","0x84","0x4a","0x1a","0x2a","0xd9","0xe2","0x67","0xaa","0xfd","0x35","0x7c","0xa1","0x2a","0x28","0xf","0x9f","0xf7","0x48","0xaa","0x6","0x2","0xf7","0x90","0xfb","0xc1","0x54","0x96","0x98","0xbd","0x23","0xf1","0xf2","0x7d","0x13","0x6c","0x4f","0xbb","0x99","0x49","0x1b","0x94","0xe6","0xb","0xc2","0x4f","0x9f","0x68","0xc4","0xa0","0x5b","0xca","0xff","0x68","0xf9","0x5a","0x9b","0x27","0x6c","0x15","0x65","0x8c","0x75","0x81","0x8c","0x35","0x39","0x2f","0x5b","0xe9","0x81","0x2","0x62","0x7e","0x63","0x5c","0x6e","0xe0","0xde","0x90","0xd9","0x4f","0x85","0xd0","0xdf","0xad","0x2a","0x1e","0xc6","0x65","0x4","0x57","0xa","0x31","0xc1","0xd4","0x76","0xb1","0x8c","0x1b"];
const p = ["0xc3","0x6c","0xad","0xcb","0x9b","0x8a","0x6d","0xb2","0x5","0x4","0x9e","0x49","0xb","0xf5","0x0","0xcf","0xaa","0x10","0x9c","0xe0","0x22","0x7","0x61","0x2c","0x71","0xd2","0xae","0x44","0x81","0x38","0x61","0x8b","0x80","0x39","0x94","0x3e","0x14","0xa3","0x74","0x3","0xc9","0x90","0xc5","0x34","0x89","0xb7","0xa9","0x78","0xe","0xd7","0x4","0xd1","0xa2","0x10","0xb8","0xdd","0x2","0xd3","0xd4","0x5a","0x57","0xc5","0x1d","0x3b","0x5a","0x23","0xd9","0x7c","0xa","0x6b","0x5b","0xea","0xe2","0xc9","0x1","0xae","0xdc","0x32","0xab","0x4","0x92","0x4a","0x4b","0x46","0x5a","0x37","0xbb","0x66","0x8f","0x14","0x5f","0x75","0x19","0x2","0x6b","0x79","0x29","0x3d","0x4e","0xf3","0x46","0xb1","0x23","0x97","0xb7","0xf4","0x30","0xb9","0xb7","0x3","0x1c","0x9","0xda","0xca","0x8a","0xe5","0xe","0xa6","0x36","0x3d","0x21","0x66","0x9a","0x7c","0xfc","0x75","0x5","0xa3"];
const m = ["0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x1","0xe2","0x40"];
const s1 = ["0x85","0x18","0x81","0xb","0xfc","0x87","0x9f","0x65","0x55","0x58","0x9b","0xab","0x3f","0xf0","0xf4","0xf6","0xc9","0x9d","0xfe","0xdd","0x9c","0x80","0x2","0xe2","0x42","0x78","0xb","0xac","0x15","0x48","0x9f","0x9e","0xd4","0xcf","0x80","0x43","0xcf","0x71","0x3c","0xea","0xa1","0x83","0x23","0xee","0x74","0xa","0xf9","0xf6","0x7","0x5e","0x90","0xf1","0x16","0x6c","0x21","0x9a","0x9d","0x56","0x78","0x2d","0xd2","0xf0","0xe8","0xbc","0x5a","0xcb","0x8","0xfc","0x14","0xb4","0x87","0x5","0xa3","0x50","0x86","0xb7","0x70","0x6","0x51","0x9","0x85","0xe9","0x50","0x6b","0x50","0xec","0x3f","0x1d","0x1","0xa2","0x9a","0x4d","0xeb","0x5a","0x75","0x42","0x35","0xdd","0x31","0xc5","0x1b","0x18","0x8e","0xde","0x37","0xfb","0x81","0xb0","0x9","0xb2","0x5b","0x94","0x6b","0x66","0x69","0xab","0x70","0x9f","0x6b","0x9e","0xce","0x5a","0x11","0x24","0xa6","0xe8","0x37","0x6d"];
const s2 = ["0xb3","0xd8","0x16","0x74","0xae","0x34","0x78","0xff","0x8c","0x60","0x23","0x4c","0x4d","0xb2","0x12","0xc3","0xa5","0xef","0x72","0x68","0xdb","0xd","0x5d","0xef","0xb5","0xeb","0x88","0x24","0x53","0xae","0x72","0xb9","0x2c","0x56","0x2","0x5b","0x87","0x66","0x7f","0xb2","0x4f","0x60","0xcf","0x81","0x4f","0xb0","0x46","0xbc","0xee","0x2f","0xd","0x7c","0x61","0x17","0xe6","0xa4","0x89","0x58","0x72","0xa7","0x87","0xd5","0x7a","0x8d","0x94","0x3f","0x4e","0xac","0xf","0x2a","0xac","0x24","0xf2","0x77","0x96","0x23","0x7a","0xdf","0xa1","0x17","0xda","0x4f","0x13","0x8d","0x2d","0xfc","0xec","0xba","0xbf","0xc6","0x35","0x99","0xa2","0xc9","0x4b","0xfd","0x1d","0xa1","0x6e","0xf9","0x7","0x2d","0x90","0xf4","0xe2","0xa5","0xeb","0xd3","0xa1","0x4","0x54","0x10","0x7d","0x4d","0x7","0x98","0xb2","0x8b","0x71","0x2c","0x1a","0x8f","0x48","0xb0","0x5f","0x58","0xa2","0x54"];
const e = ["0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0x0","0xfc","0x3a","0xab","0x6c","0x1","0xd6","0x19","0x9","0x4","0x14","0x7e","0x9b","0x10","0x64","0xfa","0x88","0xdd","0x38","0x23","0x31","0x81","0xc","0x92","0x59","0x7a","0x12","0x4d","0xd8","0xf2","0x9d","0x8f","0x45"];
doubleDiscreteLog(y, g1, g2, p, m ,s1, s2, e);

export { discreteLog, doubleDiscreteLog };